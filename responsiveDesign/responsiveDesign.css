/*
mobile design v/s desktop design
 in mobile design 
    we have to focus on the content rather than things like side bar etc
 in desktop design 
    we have a lot of space for accomodating the content "and" the side bar   


*/



/*
what is a breakpoint?
breakpointâ€” A particular point at which the page styles change to provide the best possible layout for the screen size.
*/

/*
we have to have a certain threshold at which the screen targeted for a sprecific design should change
we will have a MEDIUM and a LARGE breakpoint
*/
:root {
    box-sizing: border-box;
    font-size: calc(1vw + 0.6em);
    /*
    lets assume that the browser viewport has a height of 901.25 px
    then 1vw is 1/100*901.25px = 9px
    
    how much is 0.6em in px?
    0.6 * 16 = 9.6

    9 + 9.6 = 18.6
    */
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
    margin: 0;
    font-family: Helvetica, Arial, sans-serif;
  }


a:link {
    color: #1476b8;
    font-weight: bold;
    text-decoration: none;
  }
  a:visited {
    color: #1430b8;
  }
  a:hover {
    text-decoration: underline;
  }
  a:active {
    color: #b81414;
  }

  .page-header {
    padding: 0.4em 1em;
    background-color: #fff;
  }
  .title > h1 {
    color: #333;
    text-transform: uppercase;
    font-size: 1.5rem;
    margin: 0.2em 0;
  }
  .slogan {
    color: #888;
    font-size: 0.875em;
    margin: 0;
  }

  .hero {
    padding: 2em 1em;
    text-align: center;
    background-image: url(coffee-beans-small.jpg);
    background-size: 100%;
    color: #fff;
    text-shadow: 0.1em 0.1em 0.3em #000;
  }

  .main {
      padding: 1em;
  }

  .subtitle {
    margin-top: 1.5em;
    margin-bottom: 1.5em;
    font-size: 0.875rem;
    text-transform: uppercase;
   }

  
.menu {
    position: relative; /* https://developer.mozilla.org/en-US/docs/Web/CSS/position*/
    /*Establishes containing block for both absolutely positioned children*/
}

/*the next 2 styles create the hamburger icon*/
.menu-toggle {
    position: absolute;
    top: -1.2em; /*A negative top pulls the button up outside its containing block*/
    right: 0.1em;

    border: 0;
    background-color: transparent;

    font-size: 3em; /*1em is now 18px*/ /*3em is 54px*/
    width: 1em;
    height: 1em;
    line-height: 0.4;
    text-indent: 5em;
    white-space: nowrap;
    overflow: hidden;
}


.menu-toggle::after {
    position: absolute;
    top: 0.2em;
    left: 0.2em;
    display: block;
    content: "\2261"; /**unicode for hamburger(3 horizontal lines)*/
    text-indent: 0;
}


.menu-dropdown {
    display: none;
    position: absolute;
    right: 0;
    left: 0;
    margin: 0; 
}
.menu.is-open .menu-dropdown { /*notice the dot menu.is-open*/
    display: block;
}

/*
[on the assuption that :root, etc is not applied]
when position: static and then position absolute is applied, right: 0.1em takes an effect of 0.1em away from browser viewport
when position: relative and then position absolute is applied, right: 0.1 em takes an effect of 0.1em away from container element at which we set position:relative 
*/



.nav-menu {
  margin: 0;
  padding-left: 0;
  border: 1px solid #ccc;
  list-style: none;
  background-color: #000;
  color: #fff;
}
.nav-menu > li + li {
  border-top: 1px solid #ccc;
}

.nav-menu > li > a {
  display: block;
  padding: 0.8em 1em; /*Key clickable areas should be large and easy to tap with a finger.(specially on mobile design[UX concept])*/
  color: #fff;
  font-weight: normal;
}